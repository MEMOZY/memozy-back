plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.momozy'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2023.0.1" // Boot 3.2~용
    }
}

dependencies {
    // ✅ 기본 웹 및 REST API
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // ✅ Spring Security + OAuth2 (소셜 로그인)
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // ✅ JPA + MySQL
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ✅ Bean Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // ✅ JWT (인증 토큰)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // ✅ AWS S3 (이미지/음성 업로드)
    implementation 'software.amazon.awssdk:s3:2.25.22'
    implementation 'com.drewnoakes:metadata-extractor:2.18.0'

    // ✅ DTO 매핑 (선택)
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // ✅ API 문서화 (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // ✅ 개발 편의
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // ✅ 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // ✅ flyway
    implementation 'org.flywaydb:flyway-mysql'

    // ✅ OpenFeign (REST Client)
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // ✅ Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Apple login
    implementation 'com.nimbusds:nimbus-jose-jwt:9.37.3'

    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.100.Final:osx-aarch_64'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
